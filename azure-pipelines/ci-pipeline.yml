# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main
      - dev
  paths:
    exclude:
      - .vscode/*   

pr:
  branches:
    include:
      - '*'  # Run on PRs to any branch

pool:
  vmImage: ubuntu-latest

stages:
- stage: BuildAndTest
  jobs:
  - job: Test
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        npm ci
      displayName: 'npm install'

    - script: |
        export CHROME_BIN=/usr/bin/chromium-browser
        npm run test:coverage -- --browsers=ChromeHeadless
      displayName: 'npm test'
      continueOnError: true

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/test-results.xml'
        testRunTitle: 'Publish Test Results'
      condition: succeededOrFailed()

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'
        failIfCoverageEmpty: true
      condition: succeededOrFailed() 

    - script: |
        npm run build
      displayName: 'npm build'

- stage: Publish
  dependsOn: BuildAndTest
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - job: PublishPackage
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        npm ci
      displayName: 'npm install'

    - script: |
        npm run build
      displayName: 'npm build'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish build artifacts'
      inputs:
        targetPath: '$(Pipeline.Workspace)/dist/'
        artifact: 'nextech-ai-scribe-sdk'
        publishLocation: 'pipeline'
